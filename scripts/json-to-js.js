#!/usr/bin/env node

/**
 * Convert sprite-labels.json to js/data/sprite-labels.js
 *
 * Usage: node scripts/json-to-js.js [input.json] [output.js]
 * Default: node scripts/json-to-js.js scripts/sprite-labels.json js/data/sprite-labels.js
 */

const fs = require('fs');
const path = require('path');

// Parse command line arguments
const args = process.argv.slice(2);
const inputPath = args[0] || path.join(__dirname, 'sprite-labels.json');
const outputPath = args[1] || path.join(__dirname, '..', 'js', 'data', 'sprite-labels.js');

console.log('üé® KidPix Sprite Labels Converter');
console.log('==================================\n');

// Check if input file exists
if (!fs.existsSync(inputPath)) {
    console.error(`‚ùå Error: Input file not found: ${inputPath}`);
    console.error('\nPlease make sure you have:');
    console.error('1. Copied sprite-labels-template.json to sprite-labels.json');
    console.error('2. Filled in all the "TODO" placeholders with actual labels');
    console.error('\nThen run this script again.');
    process.exit(1);
}

console.log(`üìñ Reading: ${inputPath}`);

// Read and parse JSON
let data;
try {
    const jsonContent = fs.readFileSync(inputPath, 'utf8');
    data = JSON.parse(jsonContent);
} catch (error) {
    console.error(`‚ùå Error parsing JSON: ${error.message}`);
    process.exit(1);
}

// Validate and clean the data
console.log('üîç Validating labels...\n');

const cleanData = {};
let totalSprites = 0;
let todoCount = 0;
const issues = [];

for (const sheetKey in data) {
    // Skip metadata fields
    if (sheetKey.startsWith('_')) continue;

    cleanData[sheetKey] = {};

    for (const rowKey in data[sheetKey]) {
        // Skip metadata fields
        if (rowKey.startsWith('_')) continue;

        const rowData = data[sheetKey][rowKey];

        if (!Array.isArray(rowData)) {
            issues.push(`Sheet ${sheetKey}, Row ${rowKey}: Not an array`);
            continue;
        }

        if (rowData.length !== 14) {
            issues.push(`Sheet ${sheetKey}, Row ${rowKey}: Expected 14 columns, got ${rowData.length}`);
        }

        cleanData[sheetKey][rowKey] = rowData.map((label, colIndex) => {
            totalSprites++;

            if (label === 'TODO' || label === null || label === undefined || label.trim() === '') {
                todoCount++;
                issues.push(`Sheet ${sheetKey}, Row ${rowKey}, Col ${colIndex}: Still marked as TODO`);
                return 'unlabeled sprite';  // Fallback label
            }

            return label.trim();
        });
    }
}

// Report validation results
console.log(`Total sprites processed: ${totalSprites}`);
console.log(`Remaining TODO entries: ${todoCount}`);

if (todoCount > 0) {
    console.warn(`\n‚ö†Ô∏è  Warning: ${todoCount} sprites still need labeling!`);
    console.warn('The first 10 unlabeled sprites:');
    issues.slice(0, 10).forEach(issue => console.warn(`  - ${issue}`));
    if (issues.length > 10) {
        console.warn(`  ... and ${issues.length - 10} more`);
    }
    console.warn('\nContinuing with "unlabeled sprite" as fallback...\n');
}

if (issues.length > 0 && todoCount === 0) {
    console.error('\n‚ùå Validation issues found:');
    issues.forEach(issue => console.error(`  - ${issue}`));
    process.exit(1);
}

// Generate JavaScript output
console.log(`‚úçÔ∏è  Generating: ${outputPath}`);

const jsContent = `// KidPix Sprite Labels
// Auto-generated from sprite-labels.json by scripts/json-to-js.js
// DO NOT EDIT THIS FILE DIRECTLY - Edit the JSON source instead

KiddoPaint.Sprite.labels = ${JSON.stringify(cleanData, null, 4)};
`;

// Ensure output directory exists
const outputDir = path.dirname(outputPath);
if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
}

// Write output file
try {
    fs.writeFileSync(outputPath, jsContent, 'utf8');
    console.log('‚úÖ Success!');
    console.log(`\nGenerated: ${outputPath}`);
    console.log(`Labeled sprites: ${totalSprites - todoCount}/${totalSprites}`);

    if (todoCount === 0) {
        console.log('\nüéâ All sprites have been labeled!');
        console.log('\nNext steps:');
        console.log('1. Run: ./build.sh');
        console.log('2. Open index.html in your browser');
        console.log('3. Test the stamp tool to see your labels!');
    } else {
        console.log(`\nüìù ${todoCount} sprites still need labeling.`);
        console.log('Update sprite-labels.json and run this script again.');
    }

} catch (error) {
    console.error(`‚ùå Error writing output file: ${error.message}`);
    process.exit(1);
}
